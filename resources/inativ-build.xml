<?xml version="1.0" encoding="UTF-8"?>

<project basedir=".">

    <property environment="env"/>
    <property name="play.path" value="${env.PLAY_PATH}"/>
    <property name="inativ.repository" value="${env.LOCAL_REPOSITORY}"/>
    <import file="${play.path}/resources/application-build.xml"/>
    <property name="phantom.path" value="${env.PHANTOM_PATH}"/>
    <property name="build.dir" value="${basedir}/build" />
    <property name="wait-test-js" value="2000" />

    <condition property="suffix_arg" value="">
       <not>  
           <isset property="suffix"/>
       </not>
    </condition>

    <condition property="suffix_arg" value="--suffix ${suffix}">
        <isset property="suffix"/>
    </condition>


    <target name="check-repository" unless="inativ.repository">
        <fail message="Please specify Inativ repository path using -Dinativ.repository=/path/to/repository" />
    </target>

    <target name="test">
        <echo message="Default target test" />
        <antcall target="unit-test"/>
        <antcall target="js-test"/>
    </target>

    <target name="rc" depends="clean, build-module, check-repository, test">
        <play-python command="repository-commit -a -r ${inativ.repository} ${suffix_arg}"/>
    </target>

    <target name="build-module" depends="deps">
        <play-python command="build-module ${suffix_arg}" />
    </target>

    <target name="deps">
        <play-python command="deps --sync"/>
    </target>

    <target name="clean">
        <play-python command="clean"/>
    </target>

    <target name="unit-test">
		<echo message="Les tests unitaire ne sont pas lancÃ©s." />
        <echo message="Modifier le fichier ${basedir}/build.xml en ajoutant la target unit-test pour les lancer." />
	</target>

    <target name="js-test">
        <echo message="Run test javascript" />
        <exec spawn="true" executable="${play.path}/play">
                <arg value="start"/>
                <arg value="--%test"/>
        </exec>
        <echo message="Wait server running" />
        <sleep milliseconds="${wait-test-js}" />
        <echo message="Script qunit: ${play.path}/resources/test/qunit/run-qunit.js" />
        <exec executable="${phantom.path}/phantomjs" failonerror="true">
            <arg value="${play.path}/resources/test/qunit/run-qunit.js"/>
            <arg value="http://localhost:9900/@qunit?select=all&amp;auto=yes"/>
        </exec>
        <play-python command="stop --%test"/>
    </target>

    <!-- CONF SONAR -->

    <taskdef uri="antlib:org.sonar.ant" resource="org/sonar/ant/antlib.xml" />

    <target name="check-project-version" unless="project.version">
        <fail message="Missing property 'project.version'" />
    </target>

    <target name="sonar-java">
        <property name="sonar.sources" value="app,test,src,public/javascripts" />
        <property name="sonar.host.url" value="http://192.168.1.107:9000" />
        <property name="sonar.dynamicAnalysis" value="reuseReports" />
        <property name="sonar.surefire.reportsPath" value="test-result" />
        <property name="sonar.language" value="java" />
        <property name="sonar.java.coveragePlugin" value="cobertura" />
        <property name="sonar.cobertura.reportPath" value="test-result/code-coverage/coverage.xml" />
        <property name="sonar.projectName" value="${ant.project.name}" />
        <property name="sonar.branch" value="Java" />
        <sonar:sonar key="inativ:${ant.project.name}" version="${project.version}" xmlns:sonar="antlib:org.sonar.ant" />
    </target>

    <target name="sonar-js">
        <property name="sonar.sources" value="public/javascripts,app/views/" />
        <property name="sonar.exclusions" value="lib/*,lib/**,tests/vendor/**" />
        <property name="sonar.host.url" value="http://192.168.1.107:9000" />
        <property name="sonar.language" value="js" />
        <property name="sonar.projectName" value="${ant.project.name}" />
        <property name="sonar.branch" value="JS" />
        <sonar:sonar key="inativ:${ant.project.name}" version="${project.version}" xmlns:sonar="antlib:org.sonar.ant" />
    </target>

    <target name="run-sonar-java" depends="check-project-version, unit-test, sonar-java" />
    <target name="run-sonar-js" depends="check-project-version, sonar-js" />

</project>
